#!/usr/bin/env bash
# shellcheck disable=SC1091,SC2154

source "${HOME}/.config/bash/lib/rsum.sh"
source "${HOME}/.config/bash/lib/barg.sh"

function main {
  barg.parse "${@}" << BARG || { echo "Command need args" && exit 1; }
    #[progname='bulkren']
    #[extras="PARAMS", reqextras="true"]
    ! f/files[vec[str]] => files || F/folder[str] => folder
    s/suffix[str] => suffix p/prefix[str] => prefix
    r/replace[str] => replace_str
    D/dry[bool] => dry_run
    I/ignore-folders[bool] => ignore_folders
BARG

  local format="${PARAMS[*]}"
  if [ -z "${format}" ]; then
    printf '%s\n' "Format string cannot be empty"
    return
  fi

  ${dry_run} && printf '%s\n' "Dry run, no changes will be made"
  if [ ${#files[@]} -eq 0 ]; then
    if [ -z "${folder}" ]; then
      return
    fi
    for file in "${folder}"/*; do
      files+=("${file}")
    done
    [ ${#files[@]} -eq 0 ] && return
  fi

  # shellcheck disable=SC2155
  for ((iter = 0; iter < "${#files[@]}"; iter++)); do
    local file="${files[iter]}"
    read -r file_path < <(realpath "${file}")
    if ${ignore_folders} && [ -d "${file_path}" ]; then
      continue
    fi
    read -r file_name < <(basename "${file_path}")
    # Nothing to replace, skip
    if [ -n "${replace_str}" ]; then
      # shellcheck disable=SC2076  # Match literally
      [[ "${file_name}" =~ "${replace_str}" ]] || continue
    fi
    read -r fp_dir < <(dirname "${file_path}")

    local ext="${file_name##*.}"
    local name="${format}"

    while [[ "${name}" == *'{rand}'* ]]; do
      read -r rand_str < <(rsum)
      name="${name/\{rand\}/${rand_str}}"
    done

    name="${name//\{prefix\}/${prefix}}"
    name="${name//\{suffix\}/${suffix}}"
    name="${name//\{ext\}/${ext}}"
    name="${name//\{iter\}/${iter}}"

    # Replace the replace string with the generated name
    if [ -n "${replace_str}" ]; then
      name="${file_name//${replace_str}/${name}}"
    fi
    # If the generated name is the same as the original name, then skip
    if [ "${name}" == "${file_name}" ]; then
      continue
    fi

    printf '%b\n' "Moving \x1b[38;05;12m${file_path}\x1b[00m to \x1b[38;05;7m${fp_dir}/${name}\x1b[00m"
    if [ -f "${fp_dir}/${name}" ]; then
      read -r mkmdds < <(rsum -l6)
      printf '%b\n' "    - File exists, renaming to \x1b[38;05;7m${fp_dir}/${name}_${mkmdds}.${ext}\x1b[00m"
      ! ${dry_run} && mv "${file_path}" "${fp_dir}/${name}_${mkmdds}.${ext}"
    else
      ! ${dry_run} && mv "${file_path}" "${fp_dir}/${name}"
    fi
  done
}
main "${@}"
